-- 02-05-23
CREATE TABLE CAR(
CAR_NO INT,
NAME VARCHAR(40),
PRICE INT,CAR_QUANTITY INT);
INSERT INTO CAR VALUES(111,'TESLA',378583,1),
(222,'BMW',378673,2),(333,'ECO SPORTS',2500000,4),
(444,'AUDI',2500000,1);
SELECT * FROM CAR;
SELECT COUNT(NAME),PRICE FROM CAR GROUP BY PRICE;
SELECT COUNT(NAME) AS COUNT_NUMBER,PRICE FROM CAR GROUP BY PRICE;  -- ALIAS
SELECT COUNT(NAME) FROM CAR GROUP BY PRICE HAVING PRICE >= 2500000;
CREATE TABLE  VISIT(
ENTRY_DATE DATE,
PRICE INT,DURATION INT);
INSERT INTO VISIT VALUES('2023-05-01',1000,24),
('2023-05-02',1000,27),('2023-05-01',2700,32),
('2023-05-01',1200,24);
SELECT * FROM VISIT;
SELECT ENTRY_DATE, COUNT(*) FROM VISIT GROUP BY ENTRY_DATE;

-- EXTRACT KEYWORD EXAMPLES
SELECT EXTRACT(YEAR FROM ENTRY_DATE) AS YEAR,
EXTRACT(MONTH FROM ENTRY_DATE) AS MONTH,
EXTRACT(MONTH FROM ENTRY_DATE) AS DAY,
-- ROUND FUN ROUND OF THE DECIMAL POINTS UPTO 2 DEDECIMALS
ROUND(AVG(PRICE),3) FROM VISIT
GROUP BY EXTRACT(YEAR FROM ENTRY_DATE),EXTRACT(MONTH FROM ENTRY_DATE),EXTRACT(DAY FROM ENTRY_DATE)
GROUP BY EXTRACT(YEAR FROM ENTRY_DATE),EXTRACT(MONTH FROM ENTRY_DATE);

SELECT EXTRACT(YEAR FROM ENTRY_DATE) AS YAER,EXTRACT(MONTH FROM ENTRY_DATE)
AS MONTH,EXTRACT(DAY FROM ENTRY_DATE) AS DAY1,ROUND(AVG(PRICE),2) FROM VISIT GROUP BY
EXTRACT(YEAR FROM ENTRY_DATE),EXTRACT(MONTH FROM ENTRY_DATE),EXTRACT(DAY FROM ENTRY_DATE) ORDER BY EXTRACT(YEAR FROM ENTRY_DATE),
EXTRACT(MONTH FROM ENTRY_DATE);
SELECT ENTRY_DATE,ROUND(AVG(PRICE),3) AS AVG_PRICE FROM VISIT GROUP BY ENTRY_DATE HAVING COUNT(*) > 1 ORDER BY ENTRY_DATE;
SELECT ENTRY_DATE,ROUND(AVG(PRICE),3) AS AVG_PRICE FROM VISIT GROUP BY ENTRY_DATE HAVING COUNT(*) > 2 ORDER BY ENTRY_DATE;
SELECT ENTRY_DATE,ROUND(AVG(PRICE),3) AS AVG_PRICE FROM VISIT WHERE DURATION > 23 GROUP BY ENTRY_DATE HAVING COUNT(*) > 1 ORDER BY ENTRY_DATE;-- FOR THE SAME DATE ,DURATION ABOVE 30
SELECT * FROM CUSTOMER;
SELECT CITY, COUNT(*) AS CUSTOMER_CITY FROM CUSTOMER GROUP BY CITY;

CREATE TABLE EMPLOYEE(EMP_ID INT,NAME VARCHAR(30),AGE INT,COUNTRY VARCHAR(40));
SELECT * FROM EMPLOYEE;
INSERT INTO EMPLOYEE VALUES (100,'SUSHMITHA',20,'INDIA'),
(200,'SANATH',19,'US'),
(300,'RUDRA',35,'UK'),
(400,'RAJ',26,'US'),(500,'NITHU',28,'INDIA');

SELECT COUNT(COUNTRY),COUNTRY FROM EMPLOYEE GROUP BY COUNTRY HAVING COUNT(COUNTRY)>=2;
SELECT COUNT(COUNTRY) AS COUNTRY_NO,COUNTRY FROM EMPLOYEE GROUP BY COUNTRY HAVING COUNT(COUNTRY)>=2;
SELECT COUNTRY,COUNT(COUNTRY) FROM EMPLOYEE GROUP BY COUNTRY HAVING AVG(AGE)>=30;
SELECT COUNTRY,COUNT(COUNTRY) FROM EMPLOYEE GROUP BY COUNTRY HAVING MAX(AGE)<=30;
SELECT COUNTRY,COUNT(COUNTRY) FROM EMPLOYEE GROUP BY COUNTRY HAVING MIN(AGE)<=30;
CREATE TABLE MANAGER(ID INT,
NAME VARCHAR(30),
AGE INT,GENDER VARCHAR(40),SALARY INT);
INSERT INTO MANAGER VALUES(60,'JAYASREE',21,'FEMALE',300000),
(10,'VINAY',35,'MALE',40000),
(20,'KAVI',30,'MALE',50000),
(30,'JAYASREE',28,'FEMALE',30000),
(40,'MANJU',35,'MALE',60000),
(50,'SRAVAN',30,'MALE',40000);
SELECT * FROM MANAGER;
SELECT NAME,SUM(SALARY) AS TOTAL_SALARY FROM MANAGER GROUP BY NAME HAVING SUM(SALARY)>30000 ORDER BY NAME;
SELECT GENDER,MAX(SALARY) AS MAX_SALARY FROM MANAGER GROUP BY GENDER HAVING MAX(SALARY) < 70000;

DELIMITER //
CREATE PROCEDURE GetManagerInfo()
	BEGIN
		select * from MANAGER;
	END //
    CALL GetManagerInfo()


DELIMITER //
CREATE PROCEDURE GetManagerAge()
	BEGIN
		select * from MANAGER where age=35;
	END //

SELECT NAME FROM MANAGER ORDER BY RAND() LIMIT 1;



